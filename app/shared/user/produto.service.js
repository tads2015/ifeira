"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var http_1 = require("@angular/http");
var Rx_1 = require("rxjs/Rx");
require("rxjs/add/operator/do");
require("rxjs/add/operator/map");
var Sqlite = require("nativescript-sqlite");
var config_1 = require("../config");
var ProdutoService = (function () {
    function ProdutoService(http) {
        var _this = this;
        this.http = http;
        (new Sqlite("ifeira.db")).then(function (db) {
            db.execSQL("CREATE TABLE IF NOT EXISTS produto (id INTEGER PRIMARY KEY AUTOINCREMENT, grupo_id INTEGER, descricao TEXT, validade DATE, numero_porcoes FLOAT, peso FLOAT, valor FLOAT, infoadd VARCHAR)").then(function (id) {
                _this.database = db;
            }, function (error) {
                console.log("CREATE TABLE ERROR", error);
            });
        }, function (error) {
            console.log("OPEN DB ERROR", error);
        });
    }
    ProdutoService.prototype.cadastroProdutos = function (produto) {
        this.saveProdutos(produto);
        var lista = [];
        var headers = new http_1.Headers();
        lista.push(produto);
        headers.append("Authorization", "Bearer" + config_1.Config.token);
        headers.append("Content-Type", "application/json");
        console.log("produtos:{" + JSON.stringify(lista) + "}");
        return this.http.post(config_1.Config.apiUrl + "api/produto", JSON.stringify(lista), { headers: headers })
            .map(function (response) { return response.json(); })
            .do(function (data) {
            return data;
        })
            .catch(this.handleErrors);
    };
    //Tratamento de erros.
    ProdutoService.prototype.handleErrors = function (error) {
        console.log("erro2");
        console.log(JSON.stringify(error.json()));
        return Rx_1.Observable.throw(error);
    };
    ProdutoService.prototype.saveProdutos = function (produtos) {
        console.log(produtos);
        this.database.execSQL("INSERT INTO produto (grupo_id, descricao, validade, numero_porcoes, peso, valor, infoadd) VALUES (?,?,?,?,?,?,?)", [produtos.grupo_id, produtos.descricao, produtos.validade, produtos.numero_porcoes, produtos.peso, produtos.valor, produtos.infoadd]).then(function (id) {
            console.log("INSERT RESULT", id);
        }, function (error) {
            console.log("INSERT ERROR", error);
        });
    };
    ProdutoService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [http_1.Http])
    ], ProdutoService);
    return ProdutoService;
}());
exports.ProdutoService = ProdutoService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHV0by5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicHJvZHV0by5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBQzNDLHNDQUF3RDtBQUN4RCw4QkFBcUM7QUFDckMsZ0NBQThCO0FBQzlCLGlDQUErQjtBQUMvQixJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUUscUJBQXFCLENBQUUsQ0FBQztBQUc5QyxvQ0FBbUM7QUFHbkM7SUFJSSx3QkFBb0IsSUFBVTtRQUE5QixpQkFVRztRQVZpQixTQUFJLEdBQUosSUFBSSxDQUFNO1FBQzFCLENBQUMsSUFBSSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxFQUFFO1lBQzdCLEVBQUUsQ0FBQyxPQUFPLENBQUMsNExBQTRMLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxFQUFFO2dCQUM1TSxLQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztZQUN2QixDQUFDLEVBQUUsVUFBQSxLQUFLO2dCQUNKLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDN0MsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLEVBQUUsVUFBQSxLQUFLO1lBQ0osT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDeEMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBR0QseUNBQWdCLEdBQWhCLFVBQWlCLE9BQWdCO1FBQy9CLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDM0IsSUFBSSxLQUFLLEdBQVksRUFBRSxDQUFDO1FBRXhCLElBQUksT0FBTyxHQUFHLElBQUksY0FBTyxFQUFFLENBQUM7UUFFNUIsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUVwQixPQUFPLENBQUMsTUFBTSxDQUFDLGVBQWUsRUFBRSxRQUFRLEdBQUcsZUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pELE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDbkQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEdBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsR0FBQyxHQUFHLENBQUMsQ0FBQztRQUdwRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQ25CLGVBQU0sQ0FBQyxNQUFNLEdBQUcsYUFBYSxFQUM3QixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUNyQixFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FDbkI7YUFDQSxHQUFHLENBQUMsVUFBQSxRQUFRLElBQUksT0FBQSxRQUFRLENBQUMsSUFBSSxFQUFFLEVBQWYsQ0FBZSxDQUFDO2FBQ2hDLEVBQUUsQ0FBQyxVQUFBLElBQUk7WUFDTixNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2QsQ0FBQyxDQUFDO2FBQ0QsS0FBSyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBQ0Msc0JBQXNCO0lBQ3RCLHFDQUFZLEdBQVosVUFBYSxLQUFlO1FBQzFCLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDckIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDMUMsTUFBTSxDQUFDLGVBQVUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELHFDQUFZLEdBQVosVUFBYSxRQUFpQjtRQUM1QixPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLGtIQUFrSCxFQUN2SSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxjQUFjLEVBQUUsUUFBUSxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFBLEVBQUU7WUFDNUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDckMsQ0FBQyxFQUFFLFVBQUEsS0FBSztZQUNKLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxDQUFDO0lBQ0gsQ0FBQztJQXhETSxjQUFjO1FBRDFCLGlCQUFVLEVBQUU7eUNBS2lCLFdBQUk7T0FKckIsY0FBYyxDQXlEMUI7SUFBRCxxQkFBQztDQUFBLEFBekRELElBeURDO0FBekRZLHdDQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEh0dHAsIEhlYWRlcnMsIFJlc3BvbnNlIH0gZnJvbSBcIkBhbmd1bGFyL2h0dHBcIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzL1J4XCI7XHJcbmltcG9ydCBcInJ4anMvYWRkL29wZXJhdG9yL2RvXCI7XHJcbmltcG9ydCBcInJ4anMvYWRkL29wZXJhdG9yL21hcFwiO1xyXG52YXIgU3FsaXRlID0gcmVxdWlyZSggXCJuYXRpdmVzY3JpcHQtc3FsaXRlXCIgKTtcclxuXHJcbmltcG9ydCB7IFByb2R1dG8gfSBmcm9tIFwiLi4vcHJvZHV0b3MvcHJvZHV0b1wiO1xyXG5pbXBvcnQgeyBDb25maWcgfSBmcm9tIFwiLi4vY29uZmlnXCI7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBQcm9kdXRvU2VydmljZSB7XHJcbiAgICBcclxuICAgIHByaXZhdGUgZGF0YWJhc2U6IGFueTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHApe1xyXG4gICAgICAgIChuZXcgU3FsaXRlKFwiaWZlaXJhLmRiXCIpKS50aGVuKGRiID0+IHtcclxuICAgICAgICAgICAgZGIuZXhlY1NRTChcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHByb2R1dG8gKGlkIElOVEVHRVIgUFJJTUFSWSBLRVkgQVVUT0lOQ1JFTUVOVCwgZ3J1cG9faWQgSU5URUdFUiwgZGVzY3JpY2FvIFRFWFQsIHZhbGlkYWRlIERBVEUsIG51bWVyb19wb3Jjb2VzIEZMT0FULCBwZXNvIEZMT0FULCB2YWxvciBGTE9BVCwgaW5mb2FkZCBWQVJDSEFSKVwiKS50aGVuKGlkID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGF0YWJhc2UgPSBkYjtcclxuICAgICAgICAgICAgfSwgZXJyb3IgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJDUkVBVEUgVEFCTEUgRVJST1JcIiwgZXJyb3IpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9LCBlcnJvciA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiT1BFTiBEQiBFUlJPUlwiLCBlcnJvcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuXHJcblxyXG4gICAgICBjYWRhc3Ryb1Byb2R1dG9zKHByb2R1dG86IFByb2R1dG8pIHtcclxuICAgICAgICB0aGlzLnNhdmVQcm9kdXRvcyhwcm9kdXRvKTtcclxuICAgICAgICBsZXQgbGlzdGE6IFByb2R1dG9bXT1bXTtcclxuXHJcbiAgICAgICAgbGV0IGhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxpc3RhLnB1c2gocHJvZHV0byk7XHJcblxyXG4gICAgICAgIGhlYWRlcnMuYXBwZW5kKFwiQXV0aG9yaXphdGlvblwiLCBcIkJlYXJlclwiICsgQ29uZmlnLnRva2VuKTtcclxuICAgICAgICBoZWFkZXJzLmFwcGVuZChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJwcm9kdXRvczp7XCIrSlNPTi5zdHJpbmdpZnkobGlzdGEpK1wifVwiKTtcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KFxyXG4gICAgICAgICAgQ29uZmlnLmFwaVVybCArIFwiYXBpL3Byb2R1dG9cIixcclxuICAgICAgICAgIEpTT04uc3RyaW5naWZ5KGxpc3RhKSxcclxuICAgICAgICAgIHtoZWFkZXJzOiBoZWFkZXJzfVxyXG4gICAgICAgIClcclxuICAgICAgICAubWFwKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcclxuICAgICAgICAuZG8oZGF0YSA9PiB7XHJcbiAgICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCh0aGlzLmhhbmRsZUVycm9ycyk7XHJcbiAgICB9XHJcbiAgICAgIC8vVHJhdGFtZW50byBkZSBlcnJvcy5cclxuICAgICAgaGFuZGxlRXJyb3JzKGVycm9yOiBSZXNwb25zZSkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiZXJybzJcIik7XHJcbiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZXJyb3IuanNvbigpKSk7XHJcbiAgICAgICAgcmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyb3IpO1xyXG4gICAgICB9XHJcbiAgICBcclxuICAgICAgc2F2ZVByb2R1dG9zKHByb2R1dG9zOiBQcm9kdXRvKXtcclxuICAgICAgICBjb25zb2xlLmxvZyhwcm9kdXRvcyk7XHJcbiAgICAgICAgdGhpcy5kYXRhYmFzZS5leGVjU1FMKFwiSU5TRVJUIElOVE8gcHJvZHV0byAoZ3J1cG9faWQsIGRlc2NyaWNhbywgdmFsaWRhZGUsIG51bWVyb19wb3Jjb2VzLCBwZXNvLCB2YWxvciwgaW5mb2FkZCkgVkFMVUVTICg/LD8sPyw/LD8sPyw/KVwiLFxyXG4gICAgICAgICBbcHJvZHV0b3MuZ3J1cG9faWQsIHByb2R1dG9zLmRlc2NyaWNhbywgcHJvZHV0b3MudmFsaWRhZGUsIHByb2R1dG9zLm51bWVyb19wb3Jjb2VzLCBwcm9kdXRvcy5wZXNvLCBwcm9kdXRvcy52YWxvciwgcHJvZHV0b3MuaW5mb2FkZF0pLnRoZW4oaWQgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coXCJJTlNFUlQgUkVTVUxUXCIsIGlkKTtcclxuICAgICAgfSwgZXJyb3IgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coXCJJTlNFUlQgRVJST1JcIiwgZXJyb3IpO1xyXG4gICAgICB9KTtcclxuICAgICAgfVxyXG59Il19